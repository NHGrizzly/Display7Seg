
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module Display7Seg(
	//////////// SW //////////
	input            [9:0]		SW,

	//////////// SEG7 //////////
	output reg 		  [6:0]		HEX0,
	output reg 		  [6:0]		HEX1,
	output reg 		  [6:0]		HEX2,
	output reg 		  [6:0]		HEX3
);


//=======================================================
//  REG/WIRE declarations
//=======================================================

reg [10:0] num;

//=======================================================
//  Structural coding
//=======================================================
integer index, digit;

	always @(SW[0], SW[1], SW[2], SW[3], SW[4], SW[5], SW[6], SW[7], SW[8], SW[9]) begin
		// convert switch binary code to decimal
		num = SW[0] + (2*SW[1]) + (4*SW[2]) + (8*SW[3]) + (16*SW[4]) + (32*SW[5]) + (64*SW[6]) + (128*SW[7]) + (256*SW[8]) + (512*SW[9]);
		
		// update each 7seg display from most significant to least significant
		for(index = 0; index < 4; index = index + 1) begin
			digit = (num % (10**(index+1)))/(10**index);
			
			case(digit)
				0: case(index)
					0: HEX0 <= 7'b1000000;
					1: HEX1 <= 7'b1000000;
					2: HEX2 <= 7'b1000000;
					3: HEX3 <= 7'b1000000;
					endcase
				1: case(index)
					0: HEX0 <= 7'b1111001;
					1: HEX1 <= 7'b1111001;
					2: HEX2 <= 7'b1111001;
					3: HEX3 <= 7'b1111001;
					endcase
				2: case(index)
					0: HEX0 <= 7'b0100100;
					1: HEX1 <= 7'b0100100;
					2: HEX2 <= 7'b0100100;
					3: HEX3 <= 7'b0100100;
					endcase
				3: case(index)
					0: HEX0 <= 7'b0110000;
					1: HEX1 <= 7'b0110000;
					2: HEX2 <= 7'b0110000;
					3: HEX3 <= 7'b0110000;
					endcase
				4: case(index)
					0: HEX0 <= 7'b0011001;
					1: HEX1 <= 7'b0011001;
					2: HEX2 <= 7'b0011001;
					3: HEX3 <= 7'b0011001;
					endcase
				5: case(index)
					0: HEX0 <= 7'b0010010;
					1: HEX1 <= 7'b0010010;
					2: HEX2 <= 7'b0010010;
					3: HEX3 <= 7'b0010010;
					endcase
				6: case(index)
					0: HEX0 <= 7'b0000010;
					1: HEX1 <= 7'b0000010;
					2: HEX2 <= 7'b0000010;
					3: HEX3 <= 7'b0000010;
					endcase
				7: case(index)
					0: HEX0 <= 7'b1111000;
					1: HEX1 <= 7'b1111000;
					2: HEX2 <= 7'b1111000;
					3: HEX3 <= 7'b1111000;
					endcase
				8: case(index)
					0: HEX0 <= 7'b0000000;
					1: HEX1 <= 7'b0000000;
					2: HEX2 <= 7'b0000000;
					3: HEX3 <= 7'b0000000;
					endcase
				9: case(index)
					0: HEX0 <= 7'b0011000;
					1: HEX1 <= 7'b0011000;
					2: HEX2 <= 7'b0011000;
					3: HEX3 <= 7'b0011000;
					endcase
			endcase
		end
	end
endmodule
